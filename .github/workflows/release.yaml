# .github/workflows/release.yml
name: Build & Publish

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04] # macos-14]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"   # host Python, cibuildwheel makes all others

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.*

      - name: Build wheels
        env:
          CIBW_BUILD: "cp312-*"
          CIBW_SKIP: "pp* *-musllinux_*"   # skip PyPy, musllinux if you want
          CIBW_TEST_COMMAND: "pytest -q {project}/tests -k 'not slow' -x"
          CIBW_TEST_EXTRAS: "test"
          CIBW_ENVIRONMENT: >
            OMP_NUM_THREADS=1
            OPENBLAS_NUM_THREADS=1
          CIBW_BEFORE_BUILD_LINUX: |
            pip install scipy-openblas32
          CIBW_ENVIRONMENT_LINUX: |
                PYVER=$(python -c "import sys; print(f'cp{sys.version_info[0]}{sys.version_info[1]}')")
                OPENBLAS_DIR=/opt/python/${PYVER}-${PYVER}/lib/python${PYVER:2:1}.${PYVER:3:1}/site-packages/scipy_openblas32
                export LD_LIBRARY_PATH=$OPENBLAS_DIR:$LD_LIBRARY_PATH
                export CMAKE_ARGS="-DBLAS_LIBRARIES=$OPENBLAS_DIR/libopenblas.so -DBLAS_INCLUDE_DIR=$OPENBLAS_DIR -DBLAS_VENDOR=OpenBLAS"
                export OPENBLAS_NUM_THREADS=1
                export OMP_NUM_THREADS=1
          CIBW_ENVIRONMENT_PASS_LINUX: "LD_LIBRARY_PATH CMAKE_ARGS OPENBLAS_NUM_THREADS OMP_NUM_THREADS"
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Build sdist
        run: python -m pip install build && python -m build --sdist -o wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheelhouse/*

  publish:
    needs: build-wheels
    runs-on: ubuntu-22.04
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.11.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

